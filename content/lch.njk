---
class: demo
chroma: 20
js:
  - https://cdnjs.cloudflare.com/ajax/libs/mathjs/6.6.1/math.min.js
  - convert
  - index
---

<header>
  <h1>
    Chroma/Saturation:
    <span id="chroma-value">{{ chroma }}</span>
  </h1>

  <label for="chroma-range">
    <span>Adjust Chroma/Saturation</span>
    <input id="chroma-range" type="range" min="0" max="100" value="{{ chroma }}">
  </label>
</header>

{% macro label(
  format,
  l,
  c,
  h
) -%}
  {% set value = [l, c, h] if (format == 'lch') else [h, c, l] %}
  <code class="sr-only">{{ format }}({{ value | join(' ') }})</code>
{%- endmacro %}

{% macro lch_data(l,c,h) -%}
  data-lch="{{ [l, c, h] | join(',') }}"
{%- endmacro %}

{% macro hsl_style(h,l) -%}
  style="--hsl: hsl({{ h }} calc(var(--s) * 1%) {{ l }}%)"
{%- endmacro %}

{% macro table(
  format,
  chroma
) %}
  <table>
  {%- for hue in range(0, 360 / 2) -%}
    {%- set hue = hue * 2 -%}
    <tr class="range">
    {%- for light in range(0, 100) -%}
      <td {{
        hsl_style(hue,light)
        if (format == 'hsl') else
        lch_data(light, chroma, hue)
      }}>
        {{- label(format, light, chroma, hue) -}}
      </td>
    {%- endfor %}
    </tr>
  {%- endfor %}
  </table>
{% endmacro %}

<section class="demo-grid">
  <section id="lch">
    <h2>HCL Lightness/Hue</h2>
    {{ table(
      format='lch',
      chroma=chroma
    ) }}
  </section>

  <section id="hsl" style="--s: {{ chroma }}">
    <h2>HSL Lightness/Hue</h2>
    {{ table(
      format='hsl',
      chroma=chroma
    ) }}
  </section>
</section>
